  _autenticacaoDeLogin() {
    //retrieve the fields
    String email = _controllerEmail.text;
    String password = _controllerSenha.text;

    if (email.isNotEmpty && email.contains("@")) {
      if (password.isNotEmpty) {
        setState(() {
          _errorMessage = " ";
        });

        Userdata user = Userdata();
        user.email = email;
        user.senha = password;
        _loginUser(user);
      } else {
        setState(() {
          _errorMessage = "Enter a valid password";
        });
      }
    } else {
      setState(() {
        _errorMessage = "Enter a valid email";
      });
    }
  }

  _loginUser(Userdata user) async {
    await Firebase.initializeApp();
    FirebaseAuth _auth = FirebaseAuth.instance;
    _auth
        .signInWithEmailAndPassword(email: user.email, password: user.senha)
        .then((firebaseUser) {
      Navigator.push(
          context, MaterialPageRoute(builder: ((context) => const Home())));
    }).catchError((error) {
      setState(() {
        _errorMessage =
            'Erro ao auetenticar o usuario, verifique seu e-mail e senha.';
      });
    });
  }

  Future _verificaSeUsuarioEstaLogado() async {
    Firebase.initializeApp();
    FirebaseAuth auth = FirebaseAuth.instance;
    //auth.signOut();
    final User? loggedInUser = await auth.currentUser;
    if (loggedInUser != null) {
      Navigator.push(
          context, MaterialPageRoute(builder: ((context) => const Home())));
    }
  }

  @override
  void initState() {
    _verificaSeUsuarioEstaLogado();
    super.initState();
  }